version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

  api:
    build: .
    env_file: .env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
         condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./todolist/:/app/

  migrations:
    build: .
    env_file: .env
    environment:
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
    command: python manage.py migrate

  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - todoapp_data:/var/lib/postgresql/data/

volumes:
  todoapp_data: